""" produce dataset from physiochallengle2018 """

from __future__ import absolute_import
from __future__ import division
from __future__ import print_function

import numpy as np
import tensorflow as tf
import physionetchallenge2018_lib as phyc_lib

from glob import glob

import pdb


class PhysioChallengeDataset(object):

    def __init__(self, is_train=True, is_debug=True):
        self.data_dir = "/home/guo/Flake/arousal/data/"
        self.is_train = is_train
        self.is_debug = is_debug

    def generate_dataset(self):
        train_files_df, test_files_df = phyc_lib.get_files()
        files_df = train_files_df
        tfrecords_path = self.data_dir + "/train.tfrecords"
        with tf.python_io.TFRecordWriter(tfrecords_path) as writer:
            for index, row in files_df.iterrows():
                header_file, arousal_file, signal_file, is_traing = row
                signal_names, Fs, n_samples = phyc_lib.import_signal_names(header_file)
                signal_names = list(np.append(signal_names, 'arousals'))
                df = phyc_lib.get_subject_data(arousal_file, signal_file, signal_names)
                column_names = ['F3-M2', 'F4-M1', 'C3-M2', 'C4-M1', 'O1-M2', 'O2-M1', 'E1-M2',
                                'Chin1-Chin2']
                label = df['arousals']
                signals, is_arousals = np.arrary(df[column_names]), np.array(df[label])
                
                pass
            
            

    def __call__(self):
        pass


if __name__ == "__main__":
    phyc_dataset = PhysioChallengeDataset(is_train=True)
    phyc_dataset.generate_dataset()
