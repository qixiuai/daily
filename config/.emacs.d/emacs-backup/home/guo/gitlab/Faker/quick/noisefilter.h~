
#ifndef _NOISE_FILTER_
#define _NOISE_FILTER_

#include "filter.h"
#include "classifier.h"
#include "noisefilter.h"
#include "boost/circular_buffer.hpp"

template <class T>
using Buffer = boost::circular_buffer<T>;

class NoiseFilter {
public:
  NoiseFilter() {
    raw_signal = Buffer<float>(200); //
    flags = Buffer<int>(200);
    classifier = NoiseClassifier();
    mean_filter = MeanFilter(1500);
  }
  
  float filter(float sample);
  
  Buffer<int> flags;
  Buffer<float> raw_signal;
  Buffer<float> avg_signal;
  NoiseClassifier classifier;
  MeanFilter mean_filter;
};

#endif
