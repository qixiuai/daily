
import numpy as np


def box_to_point8(boxes):
    b = boxes[:, [0,1,2,3,0,3,2,1]]
    b = b.reshape((-1, 2))
    return b

def point8_to_box(points):
    p = points.reshape((-1, 4, 2))
    minxy = p.min(axis=1)
    maxxy = p.max(axis=1)
    return np.concatenate((minxy, maxxy), axis=1)


def filter_boxes_inside_shape(boxes, shape):
    h, w = shape
    indices = np.where(
        (boxes[:, 0] >= 0) &
        (boxes[:, 1] >= 0) &
        (boxes[:, 2] <= w) &
        (boxes[:, 3] <= h))[0]
    return indices, boxes[indices, :]
