#ifndef _FINDPEAKS_
#define _FINDPEAKS_

#include <vector>

#include "utils/utils.h"

namespace physio {

class PQRSTDetector {
public:
  Buffer<int> recent_ipks;
  Buffer<int> cycles;

  int num_cycles;
  Buffer<int> p_ipks;
  Buffer<int> q_ipks;
  Buffer<int> r_ipks;
  Buffer<int> s_ipks;
  Buffer<int> t_ipks;
  Buffer<int> total_peaks;
  
  PQRSTDetector() = default;
  
  PQRSTDetector(int Fz,
		int buffer_size,
		int num_cycles);
  
  PQRSTDetector(int Fz,
		int buffer_size,
		int update_interval=75,
		float threshold=0.75,
		int min_dist=100,
		int num_peaks=6);
  int run(double value);
  
private:
  Buffer<double>   __signal_;
  
  int __num_peaks_;
  int __Fz_;
  int __buffer_size_;
  int __update_interval_;
  float __threshold_;
  int __min_dist_;
  int __update_clock_;
  int __ipk_delay_;
  int __current_peak_rate_;
  uint64_t __next_value_index_;
  
  void __real_run();
  void __update_peak_rate();
};

} // end namespace physio
 
#endif
