#include <iostream>
#include <fstream>
#include <vector>
#include <string>

#include "findpeaks.h"
#include "filter.h"
#include "bcg.h"

int BCGFramework::run(int value) {
  double val_low  = this->medfilter_low.realtime_filter(value);
  int resp_rate  = this->resp_detector.run(val_low);
  std::cout << val_low << '\n';
  return resp_rate;
}

vector<int> load_signal(std::string file_path) {
  std::fstream in(file_path);
  if (!in.is_open()) {
    std::cout << file_path << " is not found\n";
  }
  std::vector<int> signal;
  std::string line;
  while (getline(in, line)) {
    signal.push_back(std::stoi(line));
  }
  return signal;
}


int main() {
  std::vector<int> signal = load_signal("/home/guo/AwareCore/RespiriatoryRate/data/signal1.txt");
  auto bcg = BCGFramework(75);
  for (auto v : signal) {
    auto resp_rate = bcg.run(v);
    //    std::cout << resp_rate<< '\n';
  }
  return 0;
}

