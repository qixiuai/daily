
import numpy as np
import pandas as pd
import tensorflow as tf

import pdb

class TPDataset(object):

    def __init__(self):
        self.data_dir = "/home/guo/demo/data/"
        self.train_file = self.data_dir + "train.csv"
        self.test_file = self.data_dir + "test.csv"
        self.dataset = {}
        
    @property
    def train_data(self):
        return self.dataset["train"]

    @property
    def val_data(self):
        return self.dataset["val"]

    @property
    def test_data(self):
        return self.dataset["test"]
        
    def generate_dataset(self):
        print("generate dataset in memory")
        df = pd.read_csv(self.train_file)
        df = df.sample(frac=1).reset_index(drop=True)
        
        df_tr = df.iloc[:16000,:]
        X_tr = np.array(df_tr.iloc[:,2:])
        y_tr = np.array(df_tr.iloc[:,1])
        
        df_val = df.iloc[16000:,:]
        X_val = np.array(df_val.iloc[:,2:])
        y_val = np.array(df_val.iloc[:,1])
        
        df_test = pd.read_csv(self.test_file)
        X_test = np.array(df_test.iloc[:,1:])
        
        self.dataset["train"] = (X_tr, y_tr)
        self.dataset["val"] = (X_val, y_val)
        self.dataset["test"] = X_test
        

if __name__ == "__main__":
    dataset = TPDataset()
    dataset.generate_dataset()

