
#ifndef BURN_STAGE_REPORT_H_
#define BURN_STAGE_REPORT_H_

#include <map>
#include <string>
#include <vector>

namespace burn {

  class StageReport {
  public:
    struct Args {
      std::vector<int> stages;
      int close_light_next_epoch_id;
      int open_light_prev_epoch_id;
      Args(std::vector<int> stages, int close, int open) {
	this->stages = stages;
	this->close_light_next_epoch_id = close;
	this->open_light_prev_epoch_id = open;
      }
    };

    struct Rets {
      int sleep_onset_epoch_id;
      std::map<std::string, float> table;
    };

    StageReport(Rets* rets, const Args* args): args_{args}, rets_{rets} {}
    void Run();

  private:
    const Args* args_;
    Rets* rets_;
  };



}






#endif
