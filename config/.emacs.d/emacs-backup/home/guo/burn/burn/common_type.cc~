
#include "burn/common_type.h"

namespace burn {
  
  int IndexToEpochID(int index, int fs) {
    return (index + 30 * fs - 1) / (30 * fs);
  }

  float MaxEventDurationInSec(std::vector<Event>& events, int fs)  {
    float max_dur = 0;
    int num_events = events.size();
    for (int i = 0; i < num_events; i++) {
      auto event = events[i];
      float dur = event.end - event.start;
      if (dur > max_dur)
	max_dur = dur;
    }
    float sec = max_dur / fs;
    return sec;
  }

  float MeanEventDurationInSec(std::vector<Event>& events, int fs)  {
    float sum_dur = 0;
    int num_events = events.size();
    for (int i = 0; i < num_events; i++) {
      auto event = events[i];
      float dur = event.end - event.start;
      sum_dur += dur;
    }
    float mean_dur = sum_dur / num_events;
    float sec = mean_dur / fs;
    return sec;
  }  
  
}
