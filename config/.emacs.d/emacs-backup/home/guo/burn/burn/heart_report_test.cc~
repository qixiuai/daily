
#include "burn/heart_report.h"

#include <fstream>
#include <iostream>
#include <vector>
#include <string>


std::vector<int> load_stages() {
  std::string label_path = \
    "/home/guo/data/sleepstage/database/ISRUC_Sleep/subgroupI/1/1_1.txt";
  std::ifstream in(label_path);
  std::vector<int> stages;
  std::string line;
  int counter = 0;
  while (in >> line) {
    int label = std::stoi(line);
    if (label == 5)
      label = 4;
    stages.push_back(label);
    counter += 1;
    // load 740 epochs
    if (counter >= 740)
      break;
  }
  return stages;
}

std::vector<float> load_heart_rates() {
  std::string path = \
    "/home/guo/burn/data/prates.txt";
  std::ifstream in(path);
  std::vector<int> signals;
  std::string line;
  while (in >> line) {
    int sample = std::stoi(line);
    signals.push_back(sample);
  }
  return signals;
}


int main() {
  auto stages = load_stages();
  auto heart_rates = load_heart_rates();

  auto stage_heart_rates = burn::GenerateStageHeartRates(stages, heart_rates);

  int sleep_onset_epoch_id = 0;
  int close_light_next_epoch_id = 1;
  int open_light_prev_epoch_id = 0;
  burn::StageReport::Args args(stage_heart_rates,
			       sleep_onset_epoch_id,
			       close_light_next_epoch_id,
			       open_light_prev_epoch_id);
  burn::HeartReport::Rets rets;
  burn::HeartReport heart_report(&rets, &args);
  heart_report.Run();
  
  return 0;
}

