

#ifndef BURN_LIGHT_H_
#define BURN_LIGHT_H_

#include <vector>

namespace burn {
  
  class Light {
  public:
    
    struct Args {
      std::vector<float> light;
      int fs = 1;
      Args() = default;
      Args(std::vector<float> light) {
	this->light = light;
      }
    };
    
    struct Rets {
      int open_light_in_sec;
      int close_light_in_sec;
      int open_light_prev_epoch_id;
      int close_light_next_epoch_id;
      Rets() = default;
    };
    
    Light(Rets* rets, Args* args): args_{args}, rets_{rets} {}
    void Run();
    
  private:
    const Args* args_;
    Rets* rets_;
  };
   
  
  
  
  
}






#endif

