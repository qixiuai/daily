#ifndef _FINDPEAKS_
#define _FINDPEAKS_

#include <vector>
#include <boost/circular_buffer.hpp>

using std::vector;
template <class T>
using buffer = boost::circular_buffer<T>;

using uint = unsigned int;

class PeakDetector {
public:
  PeakDetector() {}
  PeakDetector(int Fz,
	       int buffer_size,
	       int update_interval=75,
	       float threshold=0.75,
	       int min_dist=100,
	       int num_peaks=6);

  int run(double value);
private:
  buffer<double>   __signal_;
  buffer<int> __recent_ipks_;
  int __num_peaks_;
  int __Fz_;
  int __buffer_size_;
  int __update_interval_;
  float __threshold_;
  int __min_dist_;
  int __update_clock_;
  int __ipk_delay_;
  int __current_peak_rate_;
  uint64_t __next_value_index_;
  
  void __real_run();
  void __update_peak_rate();
};

#endif
