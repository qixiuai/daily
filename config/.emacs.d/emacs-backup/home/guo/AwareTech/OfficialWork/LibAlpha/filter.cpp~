#include <iostream>

/*
class FIRFilter {
private:
  int M;
  int cur_p;
  double *buf;  
public:
  double* filt(double *x, int len, double* a, int num_coeff);
  
  };
*/

// y[n] = b[n]*x[1] + b[n-1]*x[2] + ... + b[1]*x[n]
// y[n] = b[len_b-1]*x[cur_p-len_b] + b[n-cur_p-1]*x[cur_p+1]
void filter(double* y, double *x, int len, \
	    double* b, int nb, \
	    double* a, int na ) {
  int acc = 0;
  for (int n=0; n<len; n++) {
    acc = 0;
    for (int i=0; i<n && i<len_b; i++) {
      acc += b[i]*x[i];
    }
    y[n] = acc;
  }  
}

void iir_filt(double* y, double *x, int len, \
	      double* a, int len_a, \
	      double* b, int len_b) {
  
}

int main() {
  std::cout << "Start Filter" << std::endl;

  return 0;
}
