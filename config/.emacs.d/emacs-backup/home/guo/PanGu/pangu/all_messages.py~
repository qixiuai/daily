""" messages for data exchange among functions """

from __future__ import absolute_import
from __future__ import division
from __future__ import print_function


class Message(object):

    def __init__(self):
        self._reference_counts = 1
        self._version = 0 # children >= parent

    @property
    def reference_counts(self):
        return self._reference_counts
    
    @property
    def consumers(self):
        fns = []
        return fns

    @property
    def producers(self):
        fns = []
        return fns

    def __item__(self, key):
        return self.snapshots[self._version][key]

    @property
    def data(self):
        return self.snapshots[self._version]
    
    @property
    def snapshots(self):
        """ save difference from base version """
        snaps = { "_version": data }
        return snaps
    
    


    
