
import os
import pandas as pd
import numpy as np

from tqdm import tqdm

data_dir = "/home/guo/Github/OpenImage2019/data/raw/"


class OID(object):

    def __init__(self, mode="train"):
        self.mode = mode
        if mode == "train":
            self.bbox = pd.read_csv(data_dir + "challenge-2019-train-detection-bbox.csv").head(20000)
        else:
            self.bbox = pd.read_csv(data_dir + "challenge-2019-validation-detection-bbox.csv").head(10000)
        image_ids = self.bbox["ImageID"].unique()
        np.random.shuffle(image_ids)
        self.image_ids = image_ids
        self.current_index = 0
        
    def load_image(self, image_id):
        pass

    def __len__(self):
        return len(self.image_ids)
    
    def __iter__(self):
        return self

    def __next__(self):
        try:
            image_id = self.image_ids[self.current_index]
        except IndexError:
            raise StopIteration
        image_path = os.path.join(data_dir, "raw", str(self.mode), image_id+".jpg")
        df = self.bbox[self.bbox["ImageID"] == "8d6dec80235b6fea"]
        annotations = df.values.tolist()
        self.current_index += 1
        return image_path, annotations


if __name__ == "__main__":
    dataset = OID()
    for example in tqdm(dataset):
        pass


