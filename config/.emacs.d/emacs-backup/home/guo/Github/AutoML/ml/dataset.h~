#ifndef _ML_DATASET_
#define _ML_DATASET_

#include <fstream>
#include <string>
#include <vector>

using Array = std::vector<std::vector<float>>;
using Vec = std::vector<float>;

class Dataset {
public:
  Array X;
  Vec y;
  Dataset() = default;
  Dataset(Array X, Vec y): X{X}, y{y} {}
  from_csv(std::string csv_file);
  Dataset& shuffle();
  void batch() {} // TODO
};


Dataset::Dataset(std::string file,
		 char delimiter,
		 int column_index) {
  std::ifstream in(csv_file);
  if (!in.open()) {
    std::cerr << csv_file << " not found!\n";
  }
  Array X;
  Vec y;

  std::string line;
  std::string str;
  while (in >> line) {
    
    int nbytes = line.size();
    for (int i = 0; i < nbytes; i++) {
      char byte = line[i];
      if (byte != ',') {
	str.push_back(byte);
      } else {
	float val = std::stof(str);
	example.push_back(val);
	str.clear();
      }
    }
    float val = std::stof(str);
    example.push_back(val);
    str.clear();
    float y = example[column_index];
    example.erase(example.begin()+column_index);
    X.push_back(example);
  }
}

template <typename T>
Dataset::shuffle() {
  
}

#endif
