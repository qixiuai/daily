
#include <cpprest/http_client.h>
#include <cpprest/filestream.h>
#include <cpprest/json.h>
#include <cpprest/http_listener.h>
#include <cpprest/uri.h>
#include <cpprest/asyncrt_utils.h>
#include <cpprest/filestream.h>
#include <cpprest/containerstream.h>
#include <cpprest/producerconsumerstream.h>



using namespace utility;
using namespace web;
using namespace web::http;
using namespace web::http::client;
using namespace concurrency::streams;


void ClientCall() {
  http_client client(U("http://127.0.0.1:80000"));
  utility::string_t file_name = U("/home/guo/gitlab/IsOnUse/data/A001_1811280035.edf");
  utility::string_t content_type = U("application/octet-stream");
  utility::string_t path_query = U("/");
  concurrency::streams::fstream::open_istream(file_name, std::ios::in)
    .then([=](concurrency::streams::istream is) {
	client.request(methods::POST, path_query, is, content_type);
      }).get();
}

int main() {
  ClientCall();  
  return 0;
}




