
import pdb
import tensorflow as tf
from official.utils.misc import keras_utils
from absl import flags

FLAGS = flags.FLAGS

def get_callbacks():
    callbacks = []

    if FLAGS.enable_time_history:
        time_callback = keras_utils.TimeHistory(
            FLAGS.batch_size, FLAGS.log_steps)
        callbacks.append(time_callback)

    tensorboard_callbacks = tf.keras.callbacks.TensorBoard(
        log_dir=FLAGS.model_dir, histogram_freq=1, write_grads=True,
        write_images=True, embeddings_freq=1, update_freq="epoch")
    callbacks.append(tensorboard_callbacks)


    if FLAGS.profile_steps and False:
        profiler_callback = keras_utils.get_profiler_callback(
            FLAGS.model_dir,
            FLAGS.profile_steps,
            FLAGS.enable_tensorboard)
        callbacks.append(profiler_callback)

    #reduce_lr_on_plateau = tf.keras.callbacks.ReduceLROnPlateau()
    #callbacks.append(reduce_lr_on_plateau)
    return callbacks






