""" offer various `tf.data.dataset`s """

from __future__ import absolute_import
from __future__ import division
from __future__ import print_function

import os
import numpy as np

from absl import app
from absl import flags
from absl import logging

import tensorflow as tf

import gin

import pdb

@gin.configurable
class DatasetConfig(object):

    def __init__(data_dir=None):
        pass


def capslpdb(data_dir=""):
    pass


def sleepedfx(data_dir=""):
    data_dir = "/home/guo/data/sleepstage/preprocess/" + \
      "sleep-edfx/sleep-cassette/eeg_fpz_cz"
    dataset = None
    val_dataset = None
    for file in os.listdir(data_dir):
        path = os.path.join(data_dir, file)
        data = np.load(path)
        X, y = data['x'], data['y']
        X = X.reshape((-1, 3000, 1))
        y[y == 5] = 4
        y = tf.one_hot(y, 5)
        subject_dataset = tf.data.Dataset.from_tensor_slices((X, y))
        if dataset is None:
            dataset = subject_dataset
            val_dataset = subject_dataset
            #return dataset
        else:
            dataset = dataset.concatenate(subject_dataset)
    return dataset, val_dataset

def get_dataset(dataset_name="sleepedfx"):
    if dataset_name == "sleepedfx":
        return sleepedfx()
    raise NotImplementedError("dataset:{} is not implemented!".format(dataset_name))


def main(argv):
    del argv
    get_dataset()
    
if __name__ == '__main__':
    app.run(main)

