from __future__ import absolute_import
from __future__ import division
from __future__ import print_function
from tensor2tensor.layers import common_hparams
from tensor2tensor.layers import common_layers
from deepstage.utils import registry
from deepstage.utils import ds_model

import tensorflow as tf

tf.enable_eager_execution()

import pdb


@registry.register_model
class DemoModel(ds_model.DSModel):
    """ Implements demo model for exploring architecutres
    such as vgg, shake_shake_1d, Universal Transformer, Xception.
    """

    def body(self, features):
        hparams = self._hparams
        is_training = hparams.mode == tf.contrib.learn.ModeKeys.TRAIN
        inputs = features["inputs"]
        shape = common_layers.shape_list(inputs)
        x = tf.reshape(inputs, [-1, shape[1] * shape[2] * shape[3]])
        n = hparams.num_hidden_layers
        for i in range(n):
            x = tf.layers.dense(x, hparams.hidden_size, name="layer_%d" % i)
            x = tf.nn.relu(x)
        return tf.expand_dims(tf.expand_dims(x, axis=1), axis=1)

@registry.register_hparams
def demomodel_small():
    hparams = common_hparams.basic_params1()
    hparams.num_hidden_layers = 1
    hparams.hidden_size = 200
    hparams.batch_size = 256
#    hparams.optimizer = "Adam"
    return hparams


