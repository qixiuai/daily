
from __future__ import absolute_import
from __future__ import division
from __future__ import print_function
from six.moves import range

from tensor2tensor.utils import modality
from deepstage.utils import registry

import tensorflow as tf

import pdb

tf.enable_eager_execution()

class IdentityModality(modality.Modality):
    """Does nothing"""

    def bottom(self, x):
        return tf.to_float(x)

    def top(self, body_output, _):
        return body_output

class StageModality(modality.Modality):
    """ Used for sleep stage data """

    @property
    def name(self):
        return "stage_modality_%d_%d" % (self._vocab_size,
                                         self._body_input_depth)

    def bottom(self, x):
        raise NotImplementedError("StageModaility.bottom not implmented")

    def targets_bottom(self, x):
        return tf.to_float(x)

    def top(self, body_output, _):
        with tf.variable_scope(self.name):
            x = body_output
            x = tf.reduce_mean(x, axis=[1,2], keepdims=True)
            res = tf.layers.dense(x, self._vocab_size)
            return res

    def loss(self, top_out, targets):
        tf.print(targets)
        loss_scale = tf.losses.softmax_cross_entropy(
            onehot_labels=targets, logits=top_out)
        weights = self.targets_weights_fn(targets)
        loss_denom = tf.reduce_sum(weights)
        return loss_scale, loss_denom

