
#include "elegant/core/heart.h"

typedef bool status


struct Stage {
  typedef int Index;
  
  int start;
  int end;
  int value;
  // int fs;
  
  bool Contains(Index sample) {
    return sample >= start and sample < end;
  }
};

struct StageWithHeart {
  
  
};


// assume ecg fs and eeg fs all have 500Hz
status annotateHeartRatesWithStage(const std::vector<int>& ipks,
				   const std::vector<Stage>& stages,
				   std::vector<std::pair<int, int>>& annotated) {
  std::vector<int>
  int epoch_id = 0;
  int num_ipks = ipks.size();
  Stage current_stage = stages[epoch_id];
  for (int i = 0; i < num_ipks; i++) {
    auto ipk = ipks[i];
    if (current_stage.Contains(ipk)) {
      
    }
  }
  
}


float SleepMeanHeartRateInNREM() {
  
}


float sleepMeanHeartRate() {

}

float sleepMaxHeartRate() {}

float sleepMinHeartRate() {}
